###
 # \file
 #
 # \brief Provides configurations for the Skywire Nano SDK
 #
 # (C) NimbeLink Corp. 2020
 #
 # All rights reserved except as explicitly granted in the license agreement
 # between NimbeLink Corp. and the designated licensee.  No other use or
 # disclosure of this software is permitted. Portions of this software may be
 # subject to third party license terms as specified in this software, and such
 # portions are excluded from the preceding copyright notice of NimbeLink Corp.
 ##

# The version generation is still available even when not using the NimbeLink
# SDK
menu "NimbeLink Version Generation"
rsource "Kconfig.version"
endmenu

menuconfig NIMBELINK_SDK
    bool "NimbeLink SDK"
    default n
    depends on !BSD_LIBRARY
    select ARM_FIRMWARE_USES_SECURE_ENTRY_FUNCS
    help
        Enables building the NimbeLink SDK and its enabled resources.

if NIMBELINK_SDK
menu "Non-Secure Peripheral Access"
rsource "Kconfig.peripheral_access"
endmenu

config AUTO_IMAGE_VALIDATION
    bool "Automatically mark image as valid after application booted"
    default y
    help
        Automatically marks the Non-Secure firmware image as 'valid' once the
        application has fully initialized and booted.

config NIMBELINK_REBOOT
    bool "Handle requesting a reboot using Secure Services"
    default y
    help
        Use Secure Services for system reboot requests.

config ABORT_ON_FATAL_ERROR
    bool "Halt the application when a fatal error occurs"
    depends on !RESET_ON_FATAL_ERROR
    default y
    help
        Allow Secure firmware to halt the application when a fatal error
        occurs. This better allows the Secure firmware to faciliate a
        subsequent DFU operation without risking the Non-Secure application
        firmware causing a hard-to-stop boot loop.

config NIMBELINK_SOCKETS
    bool "Link the Secure Service socket APIs as 'offloaded sockets'"
    default y
    depends on NET_SOCKETS_OFFLOAD
    help
        Automatically link NimbeLink's Secure stack socket Secure Services with
        Zephyr's 'offloaded sockets' subsystem.

config NIMBELINK_AT_CMD
    bool "Redirect the at_cmd APIs to Secure Service APIs"
    default y
    depends on AT_CMD_OFFLOAD
    help
        Redirect APIs for the nRF Connect SDK's at_cmd library to use the
        NimbeLink Secure stack Secure Services.

config NIMBELINK_FOTA_DOWNLOAD
    bool "Redirect the fota_download APIs to Secure Service APIs"
    default y
    depends on FOTA_DOWNLOAD_OFFLOAD
    depends on AT_CMD
    depends on AT_NOTIF
    help
        Redirect APIs for the nRF Connect SDK's fota_download library to use
        the NimbeLink Secure stack Secure Services.

# If we're providing FOTA downloads and the download client isn't selected --
# which is fine, since it's not mandatory for the FOTA download to be offloaded
# -- we'll need to define a buffer size to keep headers/the compiler satisfied
if NIMBELINK_FOTA_DOWNLOAD && !DOWNLOAD_CLIENT
config DOWNLOAD_CLIENT_BUF_SIZE
    int "Stub-in buffer size"
    default 2048

config DOWNLOAD_CLIENT_STACK_SIZE
    int "Stub-in thread stack size"
    default 1024
endif

endif
